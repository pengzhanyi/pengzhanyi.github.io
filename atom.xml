<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog | kaori</title>
  
  
  <link href="https://pengzhanyi.github.io/atom.xml" rel="self"/>
  
  <link href="https://pengzhanyi.github.io/"/>
  <updated>2023-09-20T13:33:23.081Z</updated>
  <id>https://pengzhanyi.github.io/</id>
  
  <author>
    <name>zhanyi peng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java���������������</title>
    <link href="https://pengzhanyi.github.io/2023/09/19/java_base2/"/>
    <id>https://pengzhanyi.github.io/2023/09/19/java_base2/</id>
    <published>2023-09-19T13:37:20.000Z</published>
    <updated>2023-09-20T13:33:23.081Z</updated>
    
    <content type="html"><![CDATA[<p>[TOc]</p><p>java-����������</p><h1 id="1-��Ͷ���"><a href="#1-��Ͷ���" class="headerlink" title="1 ��Ͷ���"></a>1 ��Ͷ���</h1><h2 id="��"><a href="#��" class="headerlink" title="��"></a>��</h2><h3 id="��L�������"><a href="#��L�������" class="headerlink" title="��Ļ�������"></a>��Ļ�������</h3><ul><li>���ǹ淶�����Ƕ�������������ж�������ԺͲ��������Ը�����Ķ�������������</li></ul><h4 id="��Ա����"><a href="#��Ա����" class="headerlink" title="��Ա����"></a>��Ա����</h4><ul><li><p>�ඨ���˶��������еı�������Щ�������ǳ�Ա���������ԣ�    </p><ul><li>���Զ��壺 �������η� + �������� + ������<ul><li>��ĳ�Ա����һ������Ϊprivate����</li></ul></li><li>��Ա�������������Ƕ���������ڣ������������ڲ��ĳ�Ա����</li><li>�����Ӱ������ڲ��ı����Ǳ��ر�����������Ҳ�������Ǻ����ڲ�</li></ul><blockquote><p>ע�������г�Ա�����ж�������ʱ��<strong>������������һ��Ҫ�ڹ��������Ƚ�����ʵ�����������Ķ�������ֻ�Ƕ������ã�����ʵ��������ᷢ��Nonepointerexception</strong></p></blockquote></li></ul><h4 id="��Ա����-1"><a href="#��Ա����-1" class="headerlink" title="��Ա����"></a>��Ա����</h4><ul><li>��Ա������������ṩ�������ԵĽӿ�  <ul><li>��Ա�������壺 <ul><li>public ������������ ������ ����������{������}��</li></ul></li><li>���ڳ�Ա�����ڲ�ֱ�ӵ����Լ�����������</li><li>�ڳ�Ա�������ⲿҪͨ�����������+.�����øú���</li><li>this�ǳ�Ա������һ������Ĺ��еı��ر������������˵�������������Ǹ�����</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showprice</span><span class="params">(<span class="type">int</span> price)</span>  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">this</span>.price = price;<span class="comment">//����this�����ʱ����ر������ǵĳ�Ա����</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="�����"><a href="#�����" class="headerlink" title="�����"></a>�����</h4><ul><li><p>������ֳ�Ϊ<strong>��ʼ����</strong>���������еĳ�Ա�������ڳ�Ա����</p><ul><li>���߼�����װ�ڷ������У�ͨ��{}��Χ���������ͷ�����ͬ��û�з�������û�з��أ�û�в�����ֻ�з����壬���Ҳ���ͨ�����������ʾ���ã����Ǽ�����ʱ���򴴽�����ʱ��ʽ���á�</li></ul></li><li><p>�����﷨</p><ul><li><p>[���η�]{<br>  �����<br>  };</p></li><li><p>ע�⣺</p><ul><li>���η���ѡ��ҪдҲֻ��дstatic</li><li>������Ϊ��̬��������ͨ�����</li><li>�߼�������Ϊ�κ��߼����</li><li>;����ʡ��</li></ul></li></ul></li><li><p>����</p><ul><li>�൱������һ����ʽ�Ĺ����������ڹ������Ĳ�����ƣ�����������ʼ������</li><li>������������ж����ظ�����䣬���Գ�ȡ����ʼ�����У���ߴ���ĸ�����</li><li>�����ܵ������ĸ��������������󶼻��ȵ��ô�����е�����<ul><li>��������˳�����ڹ�����</li></ul></li></ul></li><li><p>ע�������ϸ������</p><ul><li><p>static�����Ҳ��<strong>��̬�����</strong>�����þ���<strong>������г�ʼ��</strong>��������<strong>����ļ���ʱִ��</strong>��<strong>��ֻ��ִ��һ��</strong></p></li><li><p>�����<strong>��ͨ�����</strong>��<strong>ÿ����һ�������ִ��һ��</strong>����������޹ء�</p></li><li><p><strong>��ʲôʱ�����</strong></p><ul><li>1 ��������ʵ����ʱ��</li><li>2 �����������ʵ�������� Ҳ�ᱻ����</li><li>3 ʹ����ľ�̬��Աʱ����̬��������̬���ԣ�</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">base</span><span class="comment">//��</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬�������ã��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">subclass</span> <span class="keyword">extends</span> <span class="title class_">base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬�������ã��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//����������ʹ�� subclass.base ���ӡʲô��</span></span><br><span class="line"><span class="comment">// ���� new subclass() ���ӡʲô,˳����ʲô���ģ�</span></span><br></pre></td></tr></table></figure><h3 id="static-�ؼ���"><a href="#static-�ؼ���" class="headerlink" title="static �ؼ���"></a>static �ؼ���</h3><br><ul><li><p>�����</p><ul><li>�����ж���ĳ�Ա��������static�ؼ��־ͳ�Ϊ���������̬������</li><li>����������࣬    <ul><li>����ͨ������.������ֱ�ӷ���</li><li>�����ʵ������.������</li><li>�������ڵĺ�����ֱ���ñ�������û�б��������ǵ�����£�</li></ul></li><li>���ഴ������ж��󶼿��Է����������������Ƕ���ͬһ�������<strong>������������κζ��������������</strong>������������ж�����   <br></li></ul></li><li><p>�ຯ��</p><ul><li>static���γ�Ա������ʾ�������ֻ���������</li><li>�ຯ�����÷���<ul><li>����.������ </li><li>����.������  </li><li>Ҳ�����ڷǾ�̬������ͨ��thisָ���������ຯ���������</li></ul></li><li><strong>static����ֻ�ܵ���static������ֻ�ܷ���static�ĳ�Ա����</strong>�����Ƕ�����ͨ���������ʣ�Ҳ����ͨ���������</li><li>static�����в���ʹ��this�ؼ���</li><li>����ͨ��static������þ���Ķ����ڵ���Ϣ</li><li>static����ֻ��������뵽�����е�ʱ�򣨳���װ�أ�����ʼ������������ĳ�ʼ���޹�</li></ul></li><li><p>�෽���������ʹ�ó���</p><ul><li>�������в��漰�κκ���ض���ĳ�Ա������Խ�������Ƴɾ�̬��������߿���Ч��<ul><li>���磬������utils�е�Math�࣬Arrays���</li></ul></li><li>ʵ�ʿ����Լ��Ĺ�����ʱ����һЩͨ�õķ�����Ƴɾ�̬��������������Ҫ��������Ϳ���ʹ�ø÷��������ӡ���飬����ȣ�</li></ul></li><li><p>��̬�����</p><ul><li>��static���εĴ�����Ϊ��̬�����</li><li>���౻����ʱ��̬������ִ�У�������ֻ�������Σ���˾�̬�����ִֻ��һ�Σ��ڳ�����ͨ����ʹ�þ�̬diamante��������ĳ�Ա�������г�ʼ��</li></ul></li><li><p>ע������</p><ul><li>static�ؼ���ֻ���������γ�Ա�����������������ξֲ�����</li><li>��һ����̬������ֻ�ܷ�����static���εĳ�Ա����Ϊ�Ǿ�̬��Ա��Ϊ����Ҫ����������ʵ�������ܷ��ʣ�����̬��Ա�ڱ�����ʱ���Բ���������<ul><li>��̬����ֻ�ܵ��þ�̬��Ա</li><li>�Ǿ�̬�������Է������г�Ա</li></ul></li></ul></li></ul><p>����</p><blockquote><p>main�����﷨����<br>����main��������ʽ��<br> public static void main(String[] args){}<br>1.jvm��Ҫ�������е�main�������ʸ÷����ķ���Ȩ�ޱ�����public<br>2.jvm��ִ��main����ʱ���ش����������Ը÷���������static<br>3.�÷�������String���͵�����������������б���ִ��java����ʱ���ݸ���������Ĳ���<br>4.java ִ�г��� ����1 ����2 ����3<br>���������� ��������󣬿����ڳ����д�args��ȡ����Щ����</p></blockquote><h2 id="����"><a href="#����" class="headerlink" title="����"></a>����</h2><h3 id="������"><a href="#������" class="headerlink" title="������"></a>������</h3><ul><li><p>���� &#x3D; ���� + �����ṩ�Ĵ�ʹ�ú�����</p></li><li><p><strong>�������ֻ�Ƕ���Ĺ�����</strong>����������ĸ�ֵ��Ĭ������������ô��ݣ�����ֵ�ǵ�ַ����ֵ��ʽΪ���ô���</p></li><li><p><strong>�����ڲ�������Ӧ�ñ��������������⹫���������ݺͶ����ݵĲ�������һ�����ط���ʵ�ַ�ϸ�ڣ������ṩ�����ö�������Ľӿڡ�����Ƿ�װ</strong>��</p></li></ul><h3 id="����ĳ�ʼ��"><a href="#����ĳ�ʼ��" class="headerlink" title="����ĳ�ʼ��"></a>����ĳ�ʼ��</h3><h4 id="��Ա���������ʼ��"><a href="#��Ա���������ʼ��" class="headerlink" title="��Ա���������ʼ��"></a>��Ա���������ʼ��</h4><ul><li>��Ա�����ڶ���ĵط��Ϳɸ�����ʼֵ</li><li>û�и�����ʼֵ�ĳ�Ա�������Զ������ֵ<ul><li>�������ֵ��ʾû�й����κζ���Ҳ��������NULLֵ</li></ul></li><li>�����ʼ�����Ե��ú�����������ʹ���Ѿ�����ĳ�Ա����</li></ul><h4 id="������-1"><a href="#������-1" class="headerlink" title="������"></a>������</h4><ul><li>�����﷨<ul><li>[���η�] + ������ ����������{������}    <br></li></ul></li><li>�������ص� <ul><li><strong>�������û�з���ֵ����</strong></li><li><strong>����������ֺ����������ȫ��ͬ</strong></li><li>�ڴ���������ÿһ�������ʱ����Զ������������</li><li>��ͨ���������ڴ��������ʱ���ֱ����ɶ������Գ�ʼ��<blockquote><p>����������ǰ��<strong>Ĭ�������������super�����͵�����ͨ�����</strong>��</p><ul><li>�����캯������<br>{<br>super();<br>���ñ������ͨ�����;<br>}</li><li>��ʵ���ϴ�������ʱ�ȵ��ù��캯�����������ͨ����顣  </li><li>������ͨ������ڹ��캯��ǰִ�У�������ζ����ͨ����鹹�����ڹ��캯���е�super������ʼ�����࣬���໹û��ʼ����ô�����ô�����ʼ�����������<br></li></ul></blockquote></li></ul></li><li>����������<ul><li>���캯������<strong>���أ�overload��</strong>�������ɶ�����캯����ֻ��Ҫ�����Ĳ�������ͬ</li><li>������Աû�ж��幹������ϵͳ���Զ���������һ��Ĭ�ϵĿ�ʵ�ֵ��޲ι�������<br>  ��һ��Ϊ�����ṩ�˹�������ϵͳ�Ͳ����ṩĬ�ϵĹ������ˡ�</li><li>���һ�����ж������вεĹ��췽��������ٶ���һ���޲εĹ��췽��<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">hello</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    hello()</span><br><span class="line">    &#123;</span><br><span class="line">        value = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hello(<span class="type">int</span> value)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>> javap ��JDK�ṩ��һ�������й��ߣ��ܶԸ�����class�ļ��ṩ���ֽ�����з����룬ͨ�������Զ���Դ������ֽ����˽���������ڲ�������  >ʹ�ø�ʽ��javap <options> <classes> >- ���ã�javap -c /-v ���� (-c�Դ��뷴��࣬-v���������Ϣ) <br></li></ul></li></ul><h3 id="���󴴽�����"><a href="#���󴴽�����" class="headerlink" title="���󴴽�����"></a>���󴴽�����</h3><ul><li>1����������Ϣ��ֻ����һ��</li><li>2���ڶ��з���ռ䣨��ַ��</li><li>3����ɶ����ʼ��<ul><li>1 Ĭ�ϳ�ʼ�� ��ʵ��������ʱjvm�Ὣ��Ա�����Զ���ʼ��Ϊ0��null�ȣ�</li><li>2 ��ʽ��ʼ�� </li><li>3 ��������ʼ��<blockquote><ul><li>�����������ټ���ʵ�������������Ժͷ���</li><li>ע����ͨ��������ڹ��캯���е��õģ����캯������������ͨ��������<ul><li>����ĳ�ʼ�������ڸ���ĳ�ʼ����ͨ��ͨ������super()����ɸ���ĳ�ʼ������ˣ�����Ĺ��캯������Ӧ�������๹�캯���ڵ��κ���������֮ǰ�����������ʵ����ʼ����͹��캯���е��������롣</li></ul></li><li>���þ�̬�����;�̬�����ĳ�ʼ��ʱ�����ǵ����ȼ���ͬ�����ж����̬�����Ͷ����̬������ʼ�����򰴶���˳�����</li><li>������ͨ�����ͷǾ�̬�����ĳ�ʼ��ʱ�����ǵ����ȼ���ͬ�����ж����ͨ�����Ͷ���Ǿ�̬������ʼ�����򰴶���˳�����</li><li>java��ʵ��������ʱ����˳��debugʱ����ĵ���˳�򣩣����ྲ̬���� -&gt;���ྲ̬����� -&gt; ���ྲ̬���� -&gt; ���ྲ̬����� -&gt; ���๹�캯�� -&gt; ���๹�캯�� -&gt; ������ͨ����  -&gt; �������� -&gt; ������ͨ���� -&gt; �������� </li><li>java��ʵ��������ʱ��ʼ��˳��ָ���д���ִ�о�����д����print�Ľ���������ྲ̬���� -&gt;���ྲ̬����� -&gt; ���ྲ̬���� -&gt; ���ྲ̬�����  -&gt; ������ͨ����  -&gt; �������� -&gt; ���๹�캯�� -&gt; ������ͨ���� -&gt; �������� -&gt; ���๹�캯��</li></ul></blockquote></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;<span class="comment">//��debug���ٲ鿴�������ִ������</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> getN1();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> getN2();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬��������&quot;</span>);</span><br><span class="line">    &#125;;A()&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���๹�캯������&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getN1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬��������&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    &#125;<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getN2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    &#125;&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">num3</span> <span class="operator">=</span> getN3();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">num4</span> <span class="operator">=</span> getN4();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬��������&quot;</span>);</span><br><span class="line">    &#125;B()&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���๹�캯������&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getN3</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;���ྲ̬��������&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    &#125;<span class="keyword">public</span>  <span class="type">int</span> <span class="title function_">getN4</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    &#125;&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;������ͨ��������&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//������new Bʱ�����ʲô�����Ϊʲô��������ֽ������super������ڵ�һ���й������ǽ���̬��������λ���뾲̬�����λ�ý���������в�ͬ��</span></span><br></pre></td></tr></table></figure><h3 id="this-�ؼ���"><a href="#this-�ؼ���" class="headerlink" title="this �ؼ���"></a>this �ؼ���</h3><ul><li><p>jvm��ÿ���������this��������ǰ���������ڷ����з��ʶ����е�������Ա��</p><ul><li>ͨ��this������ȷ�ط���һ����ĳ�Ա�����������ֲ��������Ƴ�ͻ����</li><li>ͨ��this���ó�Ա����</li><li>ͨ��this���Է��ʹ�����<ul><li>���ʹ������﷨�� this�������б���; </li><li>��ֻ���ڹ������е�����������������ֻ��λ�ڵ�һ�У�ֻ�ܳ���һ�Ρ�</li></ul></li><li>this�������ඨ����ⲿʹ�ã�ֻ�����ඨ��ķ�����ʹ��  </li><li>this�������ԵĹ���<ul><li>1 ���ұ��࣬����У������</li><li>2 ���û�У����Ҹ��ࣨ��������в��ҿ��Ե��ã�����ã�</li><li>3 �������û������Լ����Ҹ���ĸ���ֱ��Object��</li><li>ע��:����������ԵĹ������ҵ��˸����Ե�û�з���Ȩ�ޣ���ᱨ����cannot access ,����������ڸ���ĸ����м������Ҹ����ԣ������ҵĹ�����û���ҵ�������ʾ���Բ����ڡ�</li></ul></li></ul>  <br></li></ul><h3 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h3><ul><li>java�е��������ջ��ƣ�java��������Զ�����������ռ�õ��ڴ�ռ�</li><li>Ҳ����ͨ������System.gc()������֪ͨjava���������������������<ul><li>��һ���������ڴ��б��ͷ�ʱ������finalize()�����ᱻ�Զ����ã��ʿ��������ڶ��� finalize()�������۲�����ʱ���ͷ�</li></ul></li></ul><h1 id="2-��������"><a href="#2-��������" class="headerlink" title="2 ��������"></a>2 ��������</h1><h2 id="public"><a href="#public" class="headerlink" title="public"></a>public</h2><ul><li>public��ʾ�����εı���&#x2F;�����ǿ��ŵģ���������ʵġ�</li><li>��class�ؼ���ǰ��public��ʾ�κ��˶����������������������������public��Ҫ�������봦��һ���ļ�����������ͬ��Դ�����ļ��С�</li></ul><h2 id="private"><a href="#private" class="headerlink" title="private"></a>private</h2><ul><li><p>private�ؼ���ֻ�����ڳ�Ա�����ͳ�Ա����</p><ul><li>��ʾ�����εı���&#x2F;�����������˽�еģ�<strong>ֻ�������ڲ��ܷ���</strong>��</li><li><strong>��������Ƕ�����Ķ����ǶԶ���ġ���ͬһ����Ĳ�ͬ������Ի�����ʱ��˵�˽�г�Ա</strong>��ͬһ����Ķ��������ں������ж��Ƿ��ܱ����ʽ����������Ƿ��ڶ���ó�Ա�����С�<a href="https://blog.csdn.net/fukaibo121/article/details/73611184">�������</a></li></ul></li><li><p>����ԭ�������еĳ�Ա����������Ϊ˽�еģ�������Щ�������ܱ��������ʹ�ã������ṩ��Ӧ�ĺ����ӿ�������ఴ�������ͼȥ��ʹ�á�  </p></li><li><p><strong>��һ�����뵥Ԫ���в�ֹһ�����ʱ��ֻ��һ���������public</strong>    </p></li><li><p>���һ����ǰû��public���������ֻ���ڵ�ǰ���ڵ�package�������ã�</p></li></ul><h2 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h2><ul><li>�����ͬһ��package����������Է��ʡ�</li></ul><h2 id="friendly��I�ϣ�"><a href="#friendly��I�ϣ�" class="headerlink" title="friendly��Ĭ�ϣ�"></a>friendly��Ĭ�ϣ�</h2><ul><li>���û����һ����Աǰprivate��public���Σ�����friendly����˼�Ǻ͸ó�Աλ��ͬһ��package����������Է��ʡ�</li></ul><h1 id="3-��װ"><a href="#3-��װ" class="headerlink" title="3 ��װ"></a>3 ��װ</h1><h2 id="����-1"><a href="#����-1" class="headerlink" title="����"></a>����</h2><ul><li>��װ���ǰ����ݺͶ����ݵĲ�������һ�𣬶����ڲ�������Ӧ�ñ��������������⹫���������ṩ�����ö���Ľӿڡ�����Ƿ�װ��</li></ul><h2 id="����-2"><a href="#����-2" class="headerlink" title="����"></a>����</h2><ul><li><p>���Զ����ݽ�����֤����֤��ȫ����  </p><br></li><li><p>���ýӿں�ʵ�־ۺ�</p><ul><li>��ʵ�����ڳ�Ա���������ķ���������ʵ�֣���������ϸ��</li><li>��Ч�������������������</li><li>���������η�չ���ⲿ�޹أ���������Ŀ���չ��</li><li>�Կ�� + ��������߿���չ��     <br></li></ul></li><li><p>���÷�װ���������</p><ul><li>�����֮��Ĺ�ϵ��Ϊ���</li><li>��ϳ̶�Խ��Խ�ã����־��룬��֤����Ŀ���չ�����γ����ô���Ĺؼ�</li><li>��ò�Ҫ��һ������ֱ�Ӳ����������һ�����еĳ�Ա����<blockquote><p>���飺һ�δ������ֻ���һ����С�Ĺ��ܣ����ʹ���֮��������</p></blockquote></li></ul></li></ul><h3 id="��װ��ʵ��"><a href="#��װ��ʵ��" class="headerlink" title="��װ��ʵ��"></a>��װ��ʵ��</h3><ul><li>1  �����Խ���˽�л�����֤�ⲿ���������޸Ĳ鿴����</li><li>2  �ṩpublic��get �� set�������ڻ�ú��޸����Ե�ֵ��һ��get����Ҫ�з���ֵ��set��������Ϊboolean�ķ������ͣ�<ul><li>��������֤��Ȩ���жϵĴ����װ�ڳ�Ա�����ڲ�</li><li>����������set�������������set�������빹������</li></ul></li></ul><h1 id="4-�̳�"><a href="#4-�̳�" class="headerlink" title="4 �̳�"></a>4 �̳�</h1><h2 id="�̳��﷨"><a href="#�̳��﷨" class="headerlink" title="�̳��﷨"></a>�̳��﷨</h2><ul><li>class ���� extends ����{}<ul><li>����ͻ��Զ�ӵ�и��ඨ������Ժͷ���</li><li>����Ҳ�г��� �� ����</li><li>����Ҳ��������</li></ul></li></ul><h2 id="�̳�����"><a href="#�̳�����" class="headerlink" title="�̳�����"></a>�̳�����</h2><ul><li>ͨ���̳п��Խ�����븴�ã�</li><li>��������д�����ͬ�����Ժͷ����ǣ����Դ���Щ���г�������࣬�ڸ����ж�����Щ��ͬ�����Ժͷ�������������ֻ��ͨ��<strong>extends</strong>�������̳и��༴�ɣ�������Ҫ�������¶�����Щ���Ժͷ�����</li></ul><h2 id="�̳е��ص�"><a href="#�̳е��ص�" class="headerlink" title="�̳е��ص�"></a>�̳е��ص�</h2><ul><li>1 ����̳��˸������е����Ժͷ�������private�����Ժͷ�������������ֱ�ӷ��ʣ�Ҫͨ�������ṩ��public�ķ�������</li><li>2  java�̳�ֻ֧�ֵ��̳У�һ����ֻ����һ��ֱ�Ӹ���</li><li>3 �������<strong>��дoverride</strong>�����Ǹ����ͬ������������͸��෽�����ƣ���������ͬ�����෵��������Ҫ�͸��෵������һ�������Ǹ��෵�����͵����ࣩ</li></ul><h2 id="�̳е�ϸ��"><a href="#�̳е�ϸ��" class="headerlink" title="�̳е�ϸ��"></a>�̳е�ϸ��</h2><ul><li><p>��д�����෽��Ȩ�޲���С�ڸ��෽���ķ���Ȩ��  </p><br></li><li><p>�������๹�췽��֮ǰ����ʸ��๹�췽������ɸ���ĳ�ʼ��  </p><br></li><li><p>�������������ʱ����������ʹ���ĸ���������Ĭ��������ܻ�ȥ���ø�����޲ι�������<strong>������û���ṩ�޲ι������������������Ĺ���������superȥ�ƶ�ʹ�ø�����ĸ���������ɶԸ���ĳ�ʼ��</strong></p><ul><li>�ʶ���һ����ʱ������������ʱ����������ж���һ���޲ι�������  <br></li></ul></li><li><p>java���е��඼��Object�������    </p><br></li><li><p>���๹�����ĵ��ò�����ֱ�Ӹ��࣬����һֱ����׷�ݵ�Object�ࣨ�������ࣩ</p></li></ul><h3 id="super-����"><a href="#super-����" class="headerlink" title="[super()����]"></a>[super()����]</h3><ul><li><a href="https://blog.csdn.net/pipizhen_/article/details/107165618">super�����������</a></li><li>�������ܹ����������ʼ���Ӹ���̳������ĳ�Ա,�Ӷ��򻯴���     <br></li><li>������͸�������������Աʱ�������super�����ʸ����Ա<ul><li>super�ķ��ʲ�����ֱ�Ӹ��࣬�������߼�����Ҳ������superȥ���ʣ�����������ж���ͬ����Ա����super���ʱ�����ѭ�ͽ�ԭ��A-&gt;B-&gt;C</li><li><strong>��������Ծ���ʣ�������ͬ������˽�У��򲻻�������ϲ���үү���Ƿ��пɷ��ʵ�ͬ������</strong>    <br></li></ul></li><li>super���ܳ����ھ�̬�����У�static�����Ĳ��ܹ����� this super��    <br></li><li>super()��this()��ʹ��ʱ��<strong>������ڹ�������һ��</strong><ul><li><strong>this �� super ���ʹ��췽������ͬʱ����</strong></li><li>����super()���������ƶ����ø�����ĸ����췽��</li><li><strong>��û��super�����ƶ���ʵ�����������ʱ���Զ����ø����޲ι�������Ч����ͬ��super����</strong>;</li></ul></li></ul><h2 id="final�ؼ���"><a href="#final�ؼ���" class="headerlink" title="final�ؼ���"></a>final�ؼ���</h2><ul><li>final�ؼ�����������</li></ul><h1 id="5-��̬"><a href="#5-��̬" class="headerlink" title="5 ��̬"></a>5 ��̬</h1><h2 id="��̬��������"><a href="#��̬��������" class="headerlink" title="��̬��������"></a>��̬��������</h2><ul><li>Polymorphic   <br></li><li>Ϊ�˽����ͳ����ĸ����Բ��ߣ������ڴ���ά����ȱ�������̬    <br></li><li>��̬��ָ<strong>�������߶���</strong>ӵ�ж�����̬�����������ĵ�������������̬�Ǽ����ڷ�װ�ͼ̳еĻ����ϵ�    <br></li></ul><h2 id="��̬�l�������"><a href="#��̬�l�������" class="headerlink" title="��̬�ľ�������"></a>��̬�ľ�������</h2><h3 id="1-�����K�̬"><a href="#1-�����K�̬" class="headerlink" title="1  �����Ķ�̬"></a>1  �����Ķ�̬</h3><ul><li>��д���������ֶ�̬���������ͬͬ������ʵ�ʵ��÷���ȴ��ͬ</li></ul><h4 id="�������oI�"><a href="#�������oI�" class="headerlink" title="�������õİ�"></a>�������õİ�</h4><ul><li>��ͨ������������ú���ʱ�������Ǹ���������½а�<ul><li>��̬�󶨣����ݱ�������������������</li><li><strong>��̬��</strong>�����ݱ����Ķ�̬����������</li></ul></li></ul><h3 id="2-����K�̬"><a href="#2-����K�̬" class="headerlink" title="2  ����Ķ�̬"></a>2  ����Ķ�̬</h3><ul><li>һ������ı������ͺ��������Ϳ��Բ�һ��</li><li>���������ڶ������ʱ��ȷ����</li><li>��������ȴ�Ǹ���ʵ������ʱ�������</li><li>�������Ϳ�����ʱ &#x3D; ��� �� �������Ϳ� &#x3D; �ұ�<ul><li>�������;��������������������Ҳ����޸�<ul><li>�����������������ñ���ʱʹ�õ����;�����</li></ul></li><li>����������ʵ�ʸ����ñ������ڴ�ռ��ģ�������<ul><li>�����������ɱ���ָ��ľ����������;���</li></ul></li></ul></li></ul><h4 id="��������-1"><a href="#��������-1" class="headerlink" title="��������"></a>��������</h4><ul><li><strong>����Ķ��󱻵������������ʹ��</strong>    <ul><li>�������ֵ�������������֮���ɣ�<ul><li><strong>��ʱ����ͨ���ñ���ֱ�ӵ�����������г�Ա</strong>��ֻ����������д���෽��ʱ���ܵ���������д�ķ���</li><li>��ʱ���ú���ʱ<strong>��������������<em>��д����ĺ���</em> �в���</strong>����û����ȥ������Ѱ��      <br></li></ul></li><li>���������Դ��ݸ���Ҫ�������ĺ���</li><li>���������Դ���ڸ�������������      <br></li></ul></li><li><strong>ͨ������������ô��ڸ��ǹ�ϵ�ĺ���ʱ������ñ�����ʱ�Ĺ����Ķ�����������ĺ�������ʱ�ͻᷢ����̬</strong></li></ul><h4 id="��������-2"><a href="#��������-2" class="headerlink" title="��������"></a>��������</h4><ul><li>�﷨���������� ������ &#x3D; ���������ͣ� ��������     <br></li><li><strong>ֻ��ǿת��������ã�����ǽש�������</strong>      <br></li><li>Ҫ��������ñ���ָ����ǵ�ǰĿ�����͵Ķ���<ul><li>��ֻ�ܽ����������͵Ķ������������ǿת����ֻ������ת��������һ����������д��츸���б�û�е�����ĳ�Ա��    <br></li></ul></li><li><strong>���Ե����������������еĳ�Ա</strong>  <br></li></ul><h4 id="��̬��-DynamicBonding"><a href="#��̬��-DynamicBonding" class="headerlink" title="��̬��(DynamicBonding)"></a>��̬��(DynamicBonding)</h4><ul><li>java�Ķ�̬�󶨻���<ul><li><strong>���ö��󷽷�ʱ���÷������������ڴ��ַ&#x2F;�������Ͱ�</strong> <ul><li>��������������������д������Ѱ�Ҹ÷���      <br></li></ul></li><li>�����ö�������ʱ��<strong>����û�ж�̬�󶨻���</strong>��������������ʹ��<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">getI</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> i +<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span>  <span class="title function_">showI</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> getI();<span class="comment">//a�ڴ˴������B��getI()����</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">20</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">getI</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> i + <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicBoding</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        sout(a.showI());<span class="comment">//���н����40</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h2 id="��̬��ϸ�ں�ע������"><a href="#��̬��ϸ�ں�ע������" class="headerlink" title="��̬��ϸ�ں�ע������"></a>��̬��ϸ�ں�ע������</h2><ul><li>����û����дһ˵�����Ե�ֵ����������  <br></li><li>instanceOf�Ƚϲ������������ж�<strong>�������������</strong>�Ƿ�Ϊĳ�������ͻ�ĳ���͵����ࣨ���ǿ��ö����ʵ���ڴ�ģ�ͣ�</li></ul><h2 id="��̬��Ӧ��"><a href="#��̬��Ӧ��" class="headerlink" title="��̬��Ӧ��"></a>��̬��Ӧ��</h2><ul><li>��̬���飺���鶨������Ϊ�������ͣ�����ʵ�ʱ�������Ϊ��������<ul><li>�ڶ�̬����ѭ������ʱ��������instanceof�ؼ������ж������ڱ������������ͣ���������Ӧ���͵Ĳ���    <br></li></ul></li><li>��̬����������������β�Ϊ�������ͣ�ʵ������Ϊ��������</li></ul><h2 id="����-3"><a href="#����-3" class="headerlink" title="����"></a>����</h2><ul><li>abstract<ul><li>�����ࡪ�����������޷������ʵ�����<ul><li>������һ��ֻ����Ϊ������Ĺ��������Ϊ��Ϊ�������ṩ��������</li><li>�����಻�ܲ�������</li><li>��������Զ������<ul><li>�κμ̳��˳�����ķǳ�������Ը�ֵ���������</li></ul></li></ul></li><li>�������������������޷�ʵ�־������ĺ���<ul><li>������ֻ�ܴ����ڳ�������</li><li>�̳��Գ�����ķǳ���������븲�Ǹ����еĳ�����</li></ul></li></ul></li><li><a href="https://blog.csdn.net/qq_19782019/article/details/80259836">�ӿ�</a><ul><li>�ӿ��Ǵ�������<ul><li>���еĳ�Ա�������ǳ�����</li><li>���еĳ�Ա��������public static final       <br></li></ul></li><li>�ӿ�ֻ�ǹ涨�˳�ʲô���ӣ����ǲ���������ʲô    <br></li><li>�κ�ʵ���˽ӿڵ��඼���Դ��ݸ���Ҫ�ӿ������ĺ���      <br></li><li>interface �ӿ�<ul><li>��һ�������class����class��λ��ͬ</li><li>�ӿ���implements��ʾ��ʵ�ֽӿڣ�����extends����̳й�ϵ</li><li>�����ʵ�ֶ���ӿ�</li><li>�ӿڿ��Լ̳нӿڣ������ܼ̳���</li><li>�ӿڲ���ʵ�ֽӿ�    <br></li></ul></li><li>����ӿڵı�̷�ʽ<ul><li>��Ƴ���ʱ�ȶ���ӿڣ���ʵ����</li><li>�κ���Ҫ�ں����䴫�봫����һ���ǽӿڶ����Ǿ�����ࣨ����չ�Ըߣ�</li><li>��java�ɹ��Ĺؼ����ʺ�д���ͳ���Ҳ���³�����������ͼ���      <br></li></ul></li></ul></li><li>���ֳ���<ul><li>��������<ul><li>����һ�ָ������ʵ��</li></ul></li><li>��ϸ�����<ul><li>��ʾ��һ���̶��Ϻ���ϸ�ڹ�ע���</li></ul></li></ul></li></ul><h1 id="������-2"><a href="#������-2" class="headerlink" title="������"></a>������</h1><h2 id="����������"><a href="#����������" class="headerlink" title="����������"></a>����������</h2><blockquote><p>����ArrayList&lt;*Stirng*&gt; notes &#x3D; new ArrayList&lt;*String*&gt;;</p></blockquote><ul><li>�������������ͣ�<ul><li>���������ͣ�����ArrayList</li><li>Ԫ�ص����ͣ�����String      <br></li></ul></li><li>ArrayList</li></ul><h2 id="�ڲ���"><a href="#�ڲ���" class="headerlink" title="�ڲ���"></a>�ڲ���</h2><ul><li>�����ڱ������ڲ��������ڲ�����<ul><li>�ڲ�����ֱ�ӷ����ⲿ��ȫ����Դ</li><li>�ⲿ�Ǻ���ʱ��ֻ�ܷ����Ǹ�������final�ı���</li></ul></li></ul><h2 id="������-3"><a href="#������-3" class="headerlink" title="������"></a>������</h2><ul><li>��new����ʱ������Ķ����γ���������</li><li>��������Լ̳�ĳ�࣬Ҳ����ʵ��ĳ�ӿ�</li><li>Swing����Ϣ���ƹ㷺ʹ��������<ul><li>ע�뷴ת</li></ul></li></ul><h1 id="�쳣"><a href="#�쳣" class="headerlink" title="�쳣"></a>�쳣</h1><h2 id="�쳣��׽����"><a href="#�쳣��׽����" class="headerlink" title="�쳣��׽����"></a>�쳣��׽����</h2><p>-��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="comment">//���ܲ����쳣�Ĵ���&#125;</span></span><br><span class="line">    <span class="keyword">catch</span>(Typel id1)</span><br><span class="line">    &#123;<span class="comment">//����Typel�쳣�Ĵ���&#125;</span></span><br><span class="line">    <span class="keyword">catch</span>(Type2 id1)</span><br><span class="line">    &#123;<span class="comment">//����Type2�쳣�Ĵ���&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="equals����"><a href="#equals����" class="headerlink" title="equals����"></a>equals����</h2><ul><li><p>equals()��Object���еķ�����ֻ���ж��������ͱ�����ָ����</p></li><li><p><strong>equals()��Object�к���Ĭ�����жϵ�ַ�Ƿ����</strong>��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span> == obj);</span><br><span class="line">    &#125;<span class="comment">//Object���з�equals()����ʵ��</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>��<strong>��Object�����У���String��Integer������д�÷����������ж������Ƿ���ͬ</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object anObject)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == anObject) &#123;<span class="comment">//Object���з�equals()����ʵ��</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">anotherString</span> <span class="operator">=</span> (String)anObject;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> value.length;</span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">                <span class="type">char</span> v1[] = value;</span><br><span class="line">                <span class="type">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="��дequals-����"><a href="#��дequals-����" class="headerlink" title="��дequals()����"></a>��дequals()����</h3><ul><li>����������һ����ʱ����ֱ�ӵ������equals()������ʹ�õ��Ǽ̳���Object���equals���������ж�������������Ƿ����ͬһ������</li><li>��Ҫ��Ҫ�Ƚ��ַ��������ݶ��������ã�Ӧ����дһ�����ڸ����equals()����</li><li>��д����<ul><li>1 �жϴ����Obj�Ƿ��뵱ǰ�����ַ��ͬ<ul><li>���ǣ����ֱ�ӷ���true</li></ul></li><li>2 �жϴ����obj�����������Ƿ��뵱ǰ����������ͬ<ul><li>�������ֱ�ӷ���false</li></ul></li><li>3 <strong>�������obj�������ͣ�����һ����ǰ�������͵ı���</strong><ul><li><strong>�Ի�÷��ʸ����������Ե�Ȩ��</strong></li></ul></li><li>4 �Ƚ����������Ƿ���ͬ<ul><li>ȫΪ�淽�ɷ���Ϊtrue</li></ul></li></ul></li><li>ѧϰ�� ���Ķ�Դ��</li></ul><h3 id="������-4"><a href="#������-4" class="headerlink" title="������"></a>������</h3><p>��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">integer1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">12</span>);<span class="comment">//���ǽ�12����1000������Ƿ��������ͬ</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">integer2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">12</span>);</span><br><span class="line">System.out.println(integer1.equals(integer2));</span><br><span class="line"><span class="type">String</span> <span class="variable">string1</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span> ;</span><br><span class="line"><span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span> ;</span><br><span class="line">System.out.println(string1.equals(string2));</span><br><span class="line"><span class="type">String</span> <span class="variable">string3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello&quot;</span>) ;</span><br><span class="line"><span class="type">String</span> <span class="variable">string4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello&quot;</span>) ;</span><br><span class="line">System.out.println(string3.equals(string4));</span><br></pre></td></tr></table></figure><h2 id="hashcode-����"><a href="#hashcode-����" class="headerlink" title="hashcode()����"></a>hashcode()����</h2><ul><li>С�� <ul><li>hashcode()��������Ҫ����߾��й�ϣ�ṹ��������Ч��</li><li>�����������ָ��ͬһ���������ϣֵһ����ͬ</li><li>�����������ָ��ͬ�������ϣֵһ����ͬ</li><li>��ϣֵ�Ǹ��ݵ�ַ�ž��������㷨���������</li><li>�����ҪҲ��Ҫ��дhashcode()</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;<span class="comment">//String ��hashcode����</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> hash;</span><br><span class="line">        <span class="keyword">if</span> (h == <span class="number">0</span> &amp;&amp; value.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">char</span> val[] = value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; value.length; i++) &#123;</span><br><span class="line">                h = <span class="number">31</span> * h + val[i];</span><br><span class="line">            &#125;</span><br><span class="line">            hash = h;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="toString-����"><a href="#toString-����" class="headerlink" title="toString()����"></a>toString()����</h2><ul><li>��������<ul><li>Ĭ�Ϸ��أ�ȫ���� + @ + ��ϣֵ��ʮ�����ƣ�<blockquote><p>return getClass().getName() + “@” + Integer.toHexString(hashCode());  </p></blockquote></li><li>ʵ�ʿ�����ͨ��ϣ�������toString()��������һЩ����������Ϣ�ȣ���������������дtoString()����</li><li>��дtoString��������ӡ��ƴ�Ӷ���ʱ�������Զ����øö����toString��ʽ</li><li>��ֱ�����һ������ʱ��toString�����ᱻĬ�ϵ���</li></ul></li></ul><h2 id="clone-����"><a href="#clone-����" class="headerlink" title="clone()����"></a>clone()����</h2><h3 id="�����dz����"><a href="#�����dz����" class="headerlink" title="�����ǳ����"></a>�����ǳ����</h3><ul><li>ǳ������Ĭ������£�clone()����ִ�е���ǳ������shallow copy������ֻ�Ḵ�ƶ�����ֶ����ã��������ֶε����ݡ�����ζ������������������������ã���ô���ƵĶ����ԭʼ���󽫹�����Щ���ã����ܵ�������ĸ����á�</li><li>��ʽ����ת����clone()�������ص���Object���ͣ���Ҫ������ʽ������ת�����ܵõ���ȷ�����͡�����ܵ�������ת�����������ʱ�쳣��</li><li>�������ڲ��ɱ���󣺶��ڲ��ɱ������String����ͨ��û�б�Ҫʹ��clone()��������Ϊ���Ǳ������ǲ��ɱ�ģ�����ֱ�ӹ�����</li></ul><h3 id="clone-��������д"><a href="#clone-��������д" class="headerlink" title="clone()��������д"></a>clone()��������д</h3><h2 id="finalize"><a href="#finalize" class="headerlink" title="finalize()"></a>finalize()</h2><ul><li>�����󱻻���ʱ��ϵͳ�Զ����øö����finalize���������������д�÷�����������Ҫ��һЩ<strong>�ͷ���Դ</strong>�Ĳ�����</li><li>��ʱ�����գ���ĳ������û���κ�����ʱ����jvm����Ϊ���������һ���������󣬾ͻ�ʹ���������ջ��������ٸö���������ǰ�����finalize������������CPP�е�����������</li><li>�������ջ��Ƶĵ��ã�����ϵͳ������<ul><li>�����Ƕ��󲻱����ú����̾ͻ��գ�����ϵͳ��ר���㷨���ƻ���ʱ��</li><li>����ͨ��System.gc()���������������ջ���</li></ul></li><li>��δ��д�÷�����������Object����finalize��������Ĭ�ϴ���</li></ul><h1 id="���gʽ"><a href="#���gʽ" class="headerlink" title="���ģʽ"></a>���ģʽ</h1><ul><li>���ģʽ�Ǿ�̬���������Եľ���ʹ��</li><li>���ģʽ���ڴ�����ʵ�����ܽ�����ۻ�֮����ѡ�Ĵ���������̷���Լ���������˼����ʽ�����ģʽ�����Ǳ���������ף����������ȥ����</li></ul><h2 id="�������gʽ"><a href="#�������gʽ" class="headerlink" title="�������ģʽ"></a>�������ģʽ</h2><ul><li>�������ģʽ���ǲ�ȡһ���ķ�����֤����������ϵͳ�У�ĳ����ֻ�ܴ���һ��ʵ�����󣬲���ֻ�ṩһ��ȡ�������ʵ���ķ���</li><li>����ģʽ�����ַ�ʽ<ul><li>����ʽ</li><li>����ʽ</li></ul></li></ul><h3 id="����ʽ"><a href="#����ʽ" class="headerlink" title="����ʽ"></a>����ʽ</h3><ul><li>ʵ�ַ�ʽ<ul><li>1 ������˽�л�-&gt;��ֹ���⽫����ʵ����</li><li>2 ����ڲ���������</li><li>3 �����ṩһ�������ľ�̬�������ظ�ʵ������<ul><li>����ʽ��ָ�������ʱ��ֱ�Ӵ����������</li><li>�ʶ���ʽ���ܴ����˶�����û�б�ʹ��</li></ul></li></ul></li><li>������ʾ <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingleClass</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">SingleClass</span> <span class="params">()</span>&#123;&#125;;<span class="comment">//������˽�л���ֻ֤��һ��ʵ��������   </span></span><br><span class="line">    <span class="comment">//�����ڴ����øĶ���ʵ����Ϊ�����ھ�̬�����з��ظ�ʵ��������Ҫ��������Ϊstatic</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SingleClass</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SingleClass</span>();</span><br><span class="line">    <span class="comment">//�ṩ���ⷵ�ظ�ʵ���Ĺ�����static�ӿ�</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SingleClass <span class="title function_">getInstance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="����ʽ-1"><a href="#����ʽ-1" class="headerlink" title="����ʽ"></a>����ʽ</h3><ul><li>ʵ�ַ�ʽ�����ʽ���<ul><li>������������ʽ�����û����ø�getInstance����ʱ�Żᴴ��ʵ������</li><li>���ٴε���getInstance����ʱ�᷵��֮ǰ�����Ķ���</li></ul></li><li>������ʾ<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingleClass</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">SingleClass</span> <span class="params">()</span>&#123;&#125;;<span class="comment">//������˽�л���ֻ֤��һ��ʵ��������   </span></span><br><span class="line">    <span class="comment">//�����ڴ����������������ʵ����</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingleClass instance ;</span><br><span class="line">    <span class="comment">//�ṩ���ⷵ�ظ�ʵ���Ĺ�����static�ӿ�</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SingleClass <span class="title function_">getInstance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="literal">null</span>)<span class="comment">//���instanceΪnull�򴴽�ʵ����������λnull�򷵻�֮ǰ�Ѿ������õĶ���</span></span><br><span class="line">        instance = <span class="keyword">new</span> <span class="title class_">SingleClass</span>();</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="����-4"><a href="#����-4" class="headerlink" title="����"></a>����</h3><ul><li>��������������ڴ��������ʱ����ͬ������ʽ���������ʱ�ʹ����˶���ʵ����������ʽʱ��ʹ��ʱ�Ŵ���</li><li>����ʽ�������̰߳�ȫΪ�⣬����ʽ�����̰߳�ȫ����</li><li>����ʽ������Դ�˷ѵĿ��ܡ�</li><li>��javaSE�ı�׼���У�java.lang.Runtime���Ǿ���ĵ���ģʽ</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOc]&lt;/p&gt;
&lt;p&gt;java-����������&lt;/p&gt;
&lt;h1 id=&quot;1-��Ͷ���&quot;&gt;&lt;a href=&quot;#1-��Ͷ���&quot; class=&quot;headerlink&quot; title=&quot;1 ��Ͷ���&quot;&gt;&lt;/a&gt;1 ��Ͷ���&lt;/h1&gt;&lt;h2 id=&quot;��&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="java" scheme="https://pengzhanyi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>个人blog建设</title>
    <link href="https://pengzhanyi.github.io/2023/09/17/%E4%B8%AA%E4%BA%BAblog%E5%BB%BA%E8%AE%BE/"/>
    <id>https://pengzhanyi.github.io/2023/09/17/%E4%B8%AA%E4%BA%BAblog%E5%BB%BA%E8%AE%BE/</id>
    <published>2023-09-17T12:19:01.000Z</published>
    <updated>2023-09-18T08:56:31.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）"><a href="#记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）" class="headerlink" title="记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）"></a>记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）</h1><ul><li><p>1 安装配置Node.js,<a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">教程</a></p></li><li><p>2 <a href="https://zhuanlan.zhihu.com/p/392994381">安装Git ，并生成SSH密钥</a></p></li><li><p>3 下载hexo，（注意必须在管理员权限下的gitbash或powershell中下载）</p></li><li><p>4 <a href="https://zhuanlan.zhihu.com/p/78467553">部署网站</a></p></li><li><p>5 下载并应用butterfly主题时的<a href="https://zhuanlan.zhihu.com/p/137946156">坑</a></p></li></ul><p>补充</p><ul><li>6 <a href="https://hexo.io/zh-cn/docs/configuration.html">hexo官方文档</a><ul><li><p>hexo 命令要命令行在blog文件位置才有效</p><ul><li>或将hexo加入环境变量</li></ul></li><li><p>hexo new “name’      &#x2F;&#x2F;新建文章</p></li><li><p>hexo new page “name” &#x2F;&#x2F;新建页面</p></li><li><p>hexo clean &#x2F;&#x2F;清除缓存文件</p></li><li><p>hexo g   &#x2F;&#x2F;生成页面</p></li><li><p>hexo s  &#x2F;&#x2F;启动预览</p></li><li><p>hexo d  &#x2F;&#x2F;部署到Github</p></li></ul></li><li>7 <a href="https://butterfly.js.org/">Butterfly主题官方文档</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）&quot;&gt;&lt;a href=&quot;#记录关于在Github的Pages上用hexo的模板建设个人网站过程中用到的教程和走的一些坑（windows）&quot; class=&quot;h</summary>
      
    
    
    
    
    <category term="blog bulid" scheme="https://pengzhanyi.github.io/tags/blog-bulid/"/>
    
  </entry>
  
  <entry>
    <title>java基础语法</title>
    <link href="https://pengzhanyi.github.io/2023/09/17/java-base/"/>
    <id>https://pengzhanyi.github.io/2023/09/17/java-base/</id>
    <published>2023-09-17T11:25:52.000Z</published>
    <updated>2023-09-19T13:34:07.975Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="JAVA基础1"><a href="#JAVA基础1" class="headerlink" title="JAVA基础1"></a>JAVA基础1</h2></li></ul><h1 id="一-java的重要特点"><a href="#一-java的重要特点" class="headerlink" title="一.java的重要特点"></a>一.java的重要特点</h1><ul><li>1.面向对象(oop)</li><li>2.健壮性。Java的强类型机制，异常处理，垃圾的自动回收是Java程序健壮性的重要保证。</li><li>3.跨平台可移植</li><li>4.解释性语言<blockquote><p>解释性语言如javascript,PHP。编译性语言：C&#x2F;Cpp<br>区别是：解释性语言编译后的代码不能直接被机器执行，需要解释器执行。编译性语言，编译后的代码，可以直接被机器执行。</p></blockquote></li></ul><h1 id="二-第一个java程序"><a href="#二-第一个java程序" class="headerlink" title="二.第一个java程序"></a>二.第一个java程序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">helloworld</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>java程序的生成<ul><li>javac test.java -&gt; 编译java文件生成test.class字节码文件</li><li>java test 本质就是把.class文件加载到jvm运行该文件</li></ul></li></ul><h1 id="三-java基本数据类型"><a href="#三-java基本数据类型" class="headerlink" title="三.java基本数据类型"></a>三.java基本数据类型</h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><ul><li>整数类型 <ul><li>byte</li><li>short</li><li>int <ul><li>二进制以0b开头</li><li>八进制以0开头</li><li>十六进制以0X开头</li></ul></li><li>long <blockquote><p>补充：位运算符<br>位运算符： &gt;&gt;，&lt;&lt;，&gt;&gt;&gt;是对数据的二进制进行左移右移操作<br>其中 &gt;&gt; 表示向右移动后以1补上空位<br> 而&gt;&gt;&gt;则表示以0补上空位</p></blockquote></li></ul></li></ul><h4 id="数据的类型转换"><a href="#数据的类型转换" class="headerlink" title="数据的类型转换"></a>数据的类型转换</h4><ul><li>整型,实型,字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算，转换从低级到高级</li><li>short类型和byte类型只要参与运算，结果就会被自动转化成int类型数据<blockquote><p>例：byte num &#x3D; 1 ;<br>  short num2 &#x3D;2 ;<br>  short sum &#x3D; num + num2 ;&#x2F;&#x2F;编译会报错</p></blockquote></li></ul><h3 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h3><ul><li>float<ul><li>float类型数据必须在数据后加f或F</li></ul></li><li>double</li></ul><h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><ul><li>java使用Unicode来表示字符，可以表示汉字在内的多种文字<blockquote><p>例 ： char a &#x3D; “\u0041”;  \u表示是Unicode编码,0041是指16进制数<br>     System.out.println(a);<br>     输出结果为：a</p></blockquote></li></ul><h2 id="boolean类："><a href="#boolean类：" class="headerlink" title="boolean类："></a>boolean类：</h2><ul><li>只有true和false两个值，且不能与int值作比较</li><li>布尔类型boolean占有一个字节，由于其本身所代码的特殊含义，<strong>boolean类型与其他基本类型不能进行类型的转换</strong>（既不能进行自动类型的提升，也不能强制类型转换）， 否则，将编译出错。</li></ul><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><p>每个引用占据32位的内存空间，其值指向对象实际所在的内存中的位置</p><h3 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h3><h4 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h4><ul><li>数组的创建  </li><li>java中用new创建的int数组有初始零值。</li><li>数组的有一固定属性length，为数组长度</li><li>java中的数组变量只是new出的一块连续地址的“管理者”，即只是获得该数组所在地址，而变量之间的赋值是管理权限的赋予，数组变量的比较是判断是否管理同一个数组。   <blockquote><p><strong>数组的赋值在默认情况下是引用传递，赋的值是地址，赋值方式为引用传递</strong></p></blockquote></li><li>复制数组只能将原数组每个元素逐一拷贝给目的数组,<strong>clone函数</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">System.out.println(array.length);</span><br><span class="line"><span class="type">int</span>[] array2 = array;</span><br><span class="line">array2[<span class="number">0</span>]=<span class="number">10</span>;</span><br><span class="line">System.out.println(array[<span class="number">0</span>],array2[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure></li></ul><h4 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h4><ul><li>数组的创建 ： int[][] array &#x3D; new int[3][5];<br>  (必须要给出第一个括号中的参数)</li><li>二维数组array.length 是指该二维数组有多少行，array[1].length表示有几列</li></ul><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><ul><li>String是一个类，<strong>String的变量是对象的管理者而非所有者</strong><ul><li>类似数组变量是数组的管理者而非所有者<ul><li>故字符串创建要用new创建一个String对象，用字符串变量来管理这个这个对象<ul><li>String s &#x3D; new String(“helloworld”);</li></ul></li><li>故字符串对象变量的赋值只是让两个字符串变量管理同一个字符串对象</li></ul></li><li>String是不可变字符串<ul><li>指的是变量一旦被赋值，其值不能被改变，如果想改变变量的值，只能将变量引向另一个字符串</li></ul></li></ul></li></ul><h4 id="equals-与-的区别"><a href="#equals-与-的区别" class="headerlink" title="equals 与 &#x3D;&#x3D; 的区别"></a>equals 与 &#x3D;&#x3D; 的区别</h4><ul><li><p>&#x3D;&#x3D; 是比较运算符，而equals是Object类的方法，Java类都可以使用该方法</p></li><li><p>&#x3D;&#x3D; 既可以比较基本类型也可以比较引用类型，但equals()是Object类中的方法，只能判断引用类型</p></li><li><p>变量的 “&#x3D;&#x3D;”引用类型比较，只是判断两个变量是否管理同一个对象（字符串），即判断地址是否相同</p></li><li><p><strong>比较两个String内容是否相等要用String变量的equals()函数比较</strong></p></li><li><p>下面这段代码输出为true是因为Java中有一个字符串常量池（String Pool）的概念，它使得相同的字符串字面量在内存中只会被存储一次，而多个引用都指向同一个字符串对象。在你的代码中，a和b都被初始化为字符串字面量 “hello”，因为它们的内容相同，所以它们实际上引用了同一个字符串对象，而不是创建了两个相同内容的不同字符串对象。因此，使用”&#x3D;&#x3D;”运算符比较它们会返回true，因为它们引用的是同一个对象。这是字符串常量池的优化机制，它可以减少内存使用，并提高字符串比较的效率。如果你想要比较字符串的内容而不是引用，应该使用equals()方法，而不是”&#x3D;&#x3D;运算符  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="type">String</span> <span class="variable">string1</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">System.out.println(string1 == string2);</span><br></pre></td></tr></table></figure></li><li><p>字符串连接</p><ul><li>用 + 可以连接两个字符串<ul><li>“hello”+”world”&#x3D;”helloworld”</li></ul></li><li>当这个 + 的一边是字符串一边不是时，会将另一边表达为字符串然后做连接<ul><li>“age” + 1 + 2 -&gt; “age12”</li></ul></li></ul></li><li><p>字符串输入</p><ul><li>in.next()读入一个单词，单词的标志是空格<ul><li>空格包括空格，tab和换行</li></ul></li><li>in.nextLine() 读入一整行<blockquote><p>访问字符串里的字符<br>用s.charAT(index)函数，返回该字符串上下标为index的字符，不可用FOR-EACH循环来遍历数组变量</p></blockquote></li></ul></li><li><p>当需要对一个字符串做复杂操作时一般用<strong>StringBuffer</strong>类型，<strong>Sring类型无法对字符串做修改,是不可变的！！！ String类型只是字符串常量</strong></p><ul><li>StringBuffer.append()</li><li>**StringBuffer.toString()**将该类型转化为String类型;</li></ul></li></ul><h1 id="四-java基本语法"><a href="#四-java基本语法" class="headerlink" title="四.java基本语法"></a>四.java基本语法</h1><h2 id="数据的输入："><a href="#数据的输入：" class="headerlink" title="数据的输入："></a>数据的输入：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);<span class="comment">//println是指在输出结束后加上换行符</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span> (System.in);<span class="comment">//声明了名为in的数据输入扫描仪（Scanner）</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> in.nextInt();<span class="comment">//将输入的下一个int值赋给value变量</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="number">0</span>；<span class="comment">//常量定义</span></span><br><span class="line">        System.out.println(<span class="string">&quot;20+&quot;</span> + value + <span class="string">&quot;=&quot;</span> + (<span class="number">20</span>+ + value) );</span><br><span class="line">in.close();<span class="comment">//结束数据流，释放内存</span></span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><ul><li>也可以Integer i &#x3D; Integer.parseInt(in.next());输入数据<ul><li>in.next()接收的字符串类型</li><li>parseInt()是Integer类型的函数，将字符串识别转化为int<ul><li>与之相对的有<strong>toString()函数</strong>，将其他类型识别为转化为字符串类型</li></ul></li></ul></li></ul><h2 id="循环："><a href="#循环：" class="headerlink" title="循环："></a>循环：</h2><ul><li>while循环</li><li>do-while循环</li><li>for循环</li></ul><h3 id="FOR-EACH循环"><a href="#FOR-EACH循环" class="headerlink" title="FOR-EACH循环"></a>FOR-EACH循环</h3><pre><code>形式：for(&lt;类型&gt; &lt;变量名&gt; ，&lt;数组&gt;)&#123;&#125;</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="type">int</span> k : array)</span><br><span class="line"><span class="comment">/*解读：对于array数组里的每一个元素，循环的一轮依次拿出作为k的值,  </span></span><br><span class="line"><span class="comment">适合用于遍历数组的情况*/</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( k == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;find!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="包裹类型"><a href="#包裹类型" class="headerlink" title="包裹类型"></a>包裹类型</h2><ul><li>每种基础类型都有相对应的包裹类型</li></ul><table><thead><tr><th>基础类型</th><th>包裹类型</th></tr></thead><tbody><tr><td>boolean</td><td>Boolean</td></tr><tr><td>char</td><td>Character</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>double</td><td>Double</td></tr></tbody></table><p>包裹类型变量有一些特殊的函数<br>    - 每个包裹类型都有toString方法，用于将该类型变量转化为字符串<br>    - 每个包裹类型也有自己的parse方法，用于将字符串识别转化为该类型的变量</p><blockquote><p>例 ： Integer a &#x3D; 1;<br>System.out.println(a.MAX_VALUE);<br>输出结果为：2147483647<br>类似的还有Interger.parseInt( string, 10)，该函数将字符串作为有符号的十进制整数进行解析</p></blockquote><h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><ul><li>abs 求绝对值</li><li>pow 求幂</li><li>random 提供一个0-1的随机数<ul><li>random.nextInt(bound) 提供一个零到bound的随机int类型数据，包括零但不包括bound<ul><li>一般可以用random.nextInt(array.length)作为下标来做到随机访问数组中的成员</li></ul></li></ul></li><li>round 做四舍五入</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>不能在一个块内定义块外定义过的变量。（与C语言会隐藏块外同名变量机制不同）</li></ul><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><h3 id="IDEA快捷键"><a href="#IDEA快捷键" class="headerlink" title="IDEA快捷键"></a>IDEA快捷键</h3><ul><li>删除当前行， 自己配Ctrl + d</li><li>补全代码 alt + &#x2F;</li><li>导入该行所需的类 Alt + Enter</li><li>生成构造器等 <strong>alt + insert</strong></li><li><strong>查看一个类的层级关系 Ctrl + H</strong></li><li>生成当前类的继承关系图Ctrl + Alt + U</li><li>查看当前类的所有方法和属性 Ctrl + F12</li><li>将光标放在一个方法上，Ctrl + B可以选择定位到哪个类的方法</li><li>.var 可自动分配变量名</li><li>Ctrl + b 跳转到该函数实现处</li></ul><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><ul><li>sout模板快捷键</li><li>fori模板快捷键</li><li>file - 设置- 编辑器-实时模板 里查看java的模板，可以自定义模板增加开发效率</li></ul><h2 id="package"><a href="#package" class="headerlink" title="package"></a>package</h2><h3 id="包的基本语法"><a href="#包的基本语法" class="headerlink" title="包的基本语法"></a>包的基本语法</h3><ul><li>package 包名;</li></ul><h3 id="包的作用"><a href="#包的作用" class="headerlink" title="包的作用"></a>包的作用</h3><ul><li>包的本质就是创建不同的文件夹来保存管理类</li><li>包的名字里可以带有“.”,例如import java.util.Scanner;其中的.（包的名字中的.）实际上表达的就是文件系统中文件夹的层次，java正是同这样的手段来管理类，这就是java的package管理机制。</li><li>可用去区分相同名字的类</li><li><strong>若用到的类与当前所在文件不在一个package中则需要用import package名.类名  来引入这个类</strong>。</li></ul><h3 id="包的导入"><a href="#包的导入" class="headerlink" title="包的导入"></a>包的导入</h3><ul><li>语法： import + 完整包名<ul><li>例 ： import java.util.Scanner 只会引入Scanner</li></ul></li><li>import + 包名. + * <ul><li>引入该类下的所有的类（但不建议使用该方法，<strong>最好根据需求引用相应的类</strong>）</li></ul></li></ul><h3 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h3><ul><li>java.util&#x2F;&#x2F;系统提供的工具包，包括Scanner</li><li>java.lang &#x2F;&#x2F;lang是基本包，默认引入，不许要再引入</li><li>java.net &#x2F;&#x2F;网络包，做网络开发</li><li>java.awt &#x2F;&#x2F;做java界面开发，GUI</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>package的作用是声明当前类所在的包，需要放在类的最上面，一个类中最多只有一句package</li><li>import指令放在package指令下，在类定义前</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;JAVA基础1&quot;&gt;&lt;a href=&quot;#JAVA基础1&quot; class=&quot;headerlink&quot; title=&quot;JAVA基础1&quot;&gt;&lt;/a&gt;JAVA基础1&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;一-java的重要特点&quot;&gt;&lt;a href=&quot;#一</summary>
      
    
    
    
    
    <category term="java" scheme="https://pengzhanyi.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hello blog test</title>
    <link href="https://pengzhanyi.github.io/2023/09/17/hello-blog-test/"/>
    <id>https://pengzhanyi.github.io/2023/09/17/hello-blog-test/</id>
    <published>2023-09-17T01:03:36.000Z</published>
    <updated>2023-09-17T12:41:07.232Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://pengzhanyi.github.io/2023/09/17/hello-world/"/>
    <id>https://pengzhanyi.github.io/2023/09/17/hello-world/</id>
    <published>2023-09-17T00:13:16.062Z</published>
    <updated>2023-09-17T00:13:16.062Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
